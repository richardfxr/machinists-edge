// Partial SCSS file containing global CSS styles

// === USE ====================================
@use 'variables' as *;

/* ============================================
GLOBAL
============================================ */
:global {
    html, body {
        color: var(--clr-800);
        font-family: "GeneralSans", sans-serif;
        font-weight: 400;
        background-color: var(--clr-100);
    }

    html {
        scroll-behavior: smooth;
    }
}

h1 {
    color: var(--clr-900);
    font-family: "ClashDisplay", sans-serif;
    font-size: var(--font-4xl);
    line-height: 0.9em;
    font-weight: 600;
    text-transform: uppercase;

    overflow-wrap: break-word; 
}

h2 {
    color: var(--clr-900);
    font-family: "ClashDisplay", sans-serif;
    font-size: var(--font-2xl);
    line-height: 1em;
    font-weight: 600;
    text-transform: uppercase;

    overflow-wrap: break-word;
}

h3 {
    color: var(--clr-900);
    font-size: var(--font-xl);
    line-height: 1em;
    font-weight: 600;
}

.text {
    &--sm {
        color: var(--clr-800);
        font-size: var(--font-sm);
        line-height: 1.5em;

        a {
            text-decoration: underline;
            transition: color var(--trans-fast);

            &:hover, &:focus {
                color: var(--clr-900);
            }
        }
    }
}

svg.illustration {
    display: block;

    .stroke {
        fill: none;
        stroke: var(--clr-900);
        stroke-miterlimit: 10;

        &.default {
            stroke-width: 1.5;
        }
    }

    .fill {
        &-800 {
            fill: var(--clr-800);
        }

        &-100 {
            fill: var(--clr-100); 
        }
    }
}

.label {
    color: var(--clr-800);
    font-family: "GeneralSans", sans-serif;
    font-size: var(--font-sm);
    font-weight: 400;
    line-height: 1em;

    transition: color var(--trans-fast);


    &::after {
        content: ": ";
    }
}

input[type="radio"] ~ span {
    cursor: pointer;
}

.input__container {
    position: relative;
    outline: var(--border) transparent;
    transition: outline var(--trans-fast);

    &.error {
        z-index: 499;
        outline-color: var(--clr-error-800);
    }

    &:hover, &:focus-within {
        z-index: 500;
        outline-color: var(--clr-900);

        &.error {
            outline-color: var(--clr-error-900);
        }
    }
}

.button {
    // internal variable
    --_color: var(--clr-800);

    color: var(--_color);
    font-size: var(--font-lg);
    font-weight: 500;
    line-height: 1em;

    outline: var(--border) transparent;

    transition: color var(--trans-fast),
                outline var(--trans-fast);
    
    &:hover, &:focus {
        --_color: var(--clr-900);
    }

    &:disabled {
        cursor: not-allowed;
        --_color: var(--clr-700);
    }

    &.text {
        padding: var(--pad-2xs) var(--pad-lg);
    }

    &.text--uppercase {
        font-weight: 600;
        text-transform: uppercase;

        padding: var(--pad-xs) var(--padRem-xl);
    }

    &.icon--md, &.icon--lg {
        display: flex;
        flex-flow: row nowrap;
        align-items: center;

        :global(.icon) {
            display: block;
            fill: var(--_color);

            transition: fill var(--trans-fast);
        }

        span {
            display: block;
            white-space: nowrap;
        }
    }

    &.icon--lg {
        gap: var(--pad-xs);
        padding: var(--pad-xs) 0;

        :global(.icon) {
            width: var(--font-2xl);
        }
    }

    &.icon--md {
        gap: var(--pad-xs);
        font-size: var(--font-md);
        padding: var(--pad-2xs) 0;

        :global(.icon) {
            width: var(--font-lg);
        }
    }

    &.outlined {
        border: var(--border) var(--clr-300);

        &:hover, &:focus {
            outline-color: var(--clr-900);
        }
    }
}

/* utility */
.visuallyHidden {
    /* elements with this class will not be displayed visually but still be read by screen readers */
    clip: rect(1px, 1px, 1px, 1px);
    clip-path: inset(50%);
    height: 1px;
    width: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
}



/* === BREAKPOINTS ======================== */
@media only screen and (max-width: $breakpoint-smtablet) {
    h2 {
        padding-right: var(--pad-hrz);
        padding-left: var(--pad-hrz);
    }
}

@media only screen and (max-width: $breakpoint-mobile) {
    h2 {
        padding-right: 0;
        padding-left: 0;
    }
}

@media only screen and (max-width: $breakpoint-smmobile) {
    h2 {
        padding-right: var(--pad-hrz);
        padding-left: var(--pad-hrz);
    }
}



/* === A11Y =============================== */
@media (forced-colors: active) {
    svg.illustration {
        .stroke {
            stroke: CanvasText;
        }

        .fill {
            &-800 {
                fill: CanvasText;
            }

            &-100 {
                fill: Canvas;
            }
        }
    }
}

:global([data-motion="reduced"]) {
    scroll-behavior: auto;
}